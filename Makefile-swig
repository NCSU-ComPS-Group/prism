TESTING_FLAG = -DTESTING
WARNING_FLAGS = -Wall -Wextra -Wpedantic -Werror
CXXFLAGS = -std=c++17 $(WARNING_FLAGS) -O3

PROJECT = prism

# Names of the shared library and SWIG-generated Python module
LIBRARY_NAME = _$(PROJECT).so
PYTHON_MODULE = $(PROJECT).py

# Directories
SRCDIR = src
INCDIR = include
BUILDDIR = build
SWIGDIR = swig

# Source and header files
SOURCES = $(wildcard $(SRCDIR)/*.C)
HEADERS = $(wildcard $(INCDIR)/*.h)
OBJECTS = $(patsubst $(SRCDIR)/%.C,$(BUILDDIR)/%.o,$(SOURCES))

# Include and library paths
INCLUDE_PATH = -I$(CONDA_PREFIX)/include
LIBRARY_PATH = -L$(CONDA_PREFIX)/lib

YAML_LINK = -lyaml-cpp
FMT_LINK = -lfmt
PYTHON_LINK = -lpython3.12

LINKS = $(YAML_LINK) $(FMT_LINK)

# SWIG interface file
SWIG_INTERFACE = $(SWIGDIR)/$(PROJECT).i

# Python include directory and libraries from Conda environment
PYTHON_INCLUDE = $(shell $(CONDA_PREFIX)/bin/python3-config --includes)
PYTHON_LIBS = $(shell $(CONDA_PREFIX)/bin/python3-config --libs)


# Build the shared library
$(LIBRARY_NAME): $(OBJECTS) $(BUILDDIR)/$(PROJECT)_wrap.o
	@echo "Building $(LIBRARY_NAME)"
	@$(CXX) $(CXXFLAGS) $(INCLUDE_PATH) $(LIBRARY_PATH) -I$(INCDIR) $(PYTHON_INCLUDE) -shared -o $@ $(OBJECTS) $(BUILDDIR)/$(PROJECT)_wrap.o $(LINKS) $(PYTHON_LIBS)
	@echo "$(LIBRARY_NAME) built successfully!"

# Build SWIG wrapper object
$(BUILDDIR)/$(PROJECT)_wrap.o: $(SWIG_INTERFACE) $(HEADERS)
	@mkdir -p $(@D)
	@echo "Building SWIG wrapper for $<"
	@swig -c++ -python -I$(INCDIR) -outdir $(SWIGDIR) -o $(SWIGDIR)/$(PROJECT)_wrap.cxx $(SWIG_INTERFACE)
	@$(CXX) $(CXXFLAGS) -fPIC $(PYTHON_INCLUDE) $(INCLUDE_PATH) -I$(INCDIR) -c $(SWIGDIR)/$(PROJECT)_wrap.cxx -o $@

# Build all of the source files for the library
# -fPIC flag is required for linux shared_object build
$(BUILDDIR)/%.o: $(SRCDIR)/%.C
	@mkdir -p $(@D)
	@echo "Building $<"
	@$(CXX) $(CXXFLAGS) -fPIC -I$(INCDIR)/$(PROJECT) $(INCLUDE_PATH) -c $< -o $@

# Rule to create the library and executable
all: $(LIBRARY_NAME)

# Clean the build artifacts
clean:
	@rm -rf *.dSYM
	@rm -f $(LIBRARY_NAME)
	@rm -rf $(BUILDDIR)/*
	@rm -f $(SWIGDIR)/$(PROJECT)_wrap.cxx
	@rm -f $(SWIGDIR)/$(PROJECT).py

install: all
	@mkdir -p $(CONDA_PREFIX)/include/$(PROJECT)
	@cp -r $(INCDIR)/$(PROJECT) $(CONDA_PREFIX)/include
	@mv $(LIBRARY_NAME) $(CONDA_PREFIX)/lib

uninstall: clean
	@rm -rf $(CONDA_PREFIX)/include/$(PROJECT)
	@rm -f $(CONDA_PREFIX)/lib/$(LIBRARY_NAME)

install-testing: CXXFLAGS += $(TESTING_FLAG)
install-testing: install

.PHONY: all clean
